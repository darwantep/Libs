{"version":3,"sources":["../../../lib/doc/cell.js"],"names":["colCache","require","_","Enums","slideFormula","Note","Cell","row","column","address","Error","_row","_column","validateAddress","_address","_value","Value","create","Types","Null","style","_mergeStyle","_mergeCount","worksheet","workbook","numFmt","value","font","alignment","border","fill","protection","rowStyle","colStyle","number","letter","type","effectiveType","toCsvString","Merge","master","ignoreStyle","release","isMergedTo","Hyperlink","hyperlink","v","getType","_comment","note","toString","escapeHtml","text","String","formula","result","formulaType","sheetName","name","col","names","definedNames","getNamesEx","fullAddress","removeAllNames","forEach","addEx","removeEx","dataValidations","_dataValidations","find","add","model","comment","fromModel","ValueType","NullValue","cell","NumberValue","Number","StringValue","replace","RichTextValue","richText","map","t","join","RichText","DateValue","Date","toISOString","HyperlinkValue","undefined","tooltip","MergeValue","_master","addMergeRef","releaseMergeRef","FormulaValue","Formula","shareType","ref","sharedFormula","copy","cp","_copyModel","ranges","match","cells","_getTranslatedFormula","FormulaType","Master","Shared","None","_translatedFormula","findCell","SharedStringValue","SharedString","BooleanValue","Boolean","ErrorValue","error","JSONValue","JSON","stringify","rawValue","sharedString","types","f","reduce","p","T","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\nconst colCache = require('../utils/col-cache');\nconst _ = require('../utils/under-dash');\nconst Enums = require('./enums');\nconst {slideFormula} = require('../utils/shared-formula');\nconst Note = require('./note');\n// Cell requirements\n//  Operate inside a worksheet\n//  Store and retrieve a value with a range of types: text, number, date, hyperlink, reference, formula, etc.\n//  Manage/use and manipulate cell format either as local to cell or inherited from column or row.\n\nclass Cell {\n  constructor(row, column, address) {\n    if (!row || !column) {\n      throw new Error('A Cell needs a Row');\n    }\n\n    this._row = row;\n    this._column = column;\n\n    colCache.validateAddress(address);\n    this._address = address;\n\n    // TODO: lazy evaluation of this._value\n    this._value = Value.create(Cell.Types.Null, this);\n\n    this.style = this._mergeStyle(row.style, column.style, {});\n\n    this._mergeCount = 0;\n  }\n\n  get worksheet() {\n    return this._row.worksheet;\n  }\n\n  get workbook() {\n    return this._row.worksheet.workbook;\n  }\n\n  // help GC by removing cyclic (and other) references\n  destroy() {\n    delete this.style;\n    delete this._value;\n    delete this._row;\n    delete this._column;\n    delete this._address;\n  }\n\n  // =========================================================================\n  // Styles stuff\n  get numFmt() {\n    return this.style.numFmt;\n  }\n\n  set numFmt(value) {\n    this.style.numFmt = value;\n  }\n\n  get font() {\n    return this.style.font;\n  }\n\n  set font(value) {\n    this.style.font = value;\n  }\n\n  get alignment() {\n    return this.style.alignment;\n  }\n\n  set alignment(value) {\n    this.style.alignment = value;\n  }\n\n  get border() {\n    return this.style.border;\n  }\n\n  set border(value) {\n    this.style.border = value;\n  }\n\n  get fill() {\n    return this.style.fill;\n  }\n\n  set fill(value) {\n    this.style.fill = value;\n  }\n\n  get protection() {\n    return this.style.protection;\n  }\n\n  set protection(value) {\n    this.style.protection = value;\n  }\n\n  _mergeStyle(rowStyle, colStyle, style) {\n    const numFmt = (rowStyle && rowStyle.numFmt) || (colStyle && colStyle.numFmt);\n    if (numFmt) style.numFmt = numFmt;\n\n    const font = (rowStyle && rowStyle.font) || (colStyle && colStyle.font);\n    if (font) style.font = font;\n\n    const alignment = (rowStyle && rowStyle.alignment) || (colStyle && colStyle.alignment);\n    if (alignment) style.alignment = alignment;\n\n    const border = (rowStyle && rowStyle.border) || (colStyle && colStyle.border);\n    if (border) style.border = border;\n\n    const fill = (rowStyle && rowStyle.fill) || (colStyle && colStyle.fill);\n    if (fill) style.fill = fill;\n\n    const protection = (rowStyle && rowStyle.protection) || (colStyle && colStyle.protection);\n    if (protection) style.protection = protection;\n\n    return style;\n  }\n\n  // =========================================================================\n  // return the address for this cell\n  get address() {\n    return this._address;\n  }\n\n  get row() {\n    return this._row.number;\n  }\n\n  get col() {\n    return this._column.number;\n  }\n\n  get $col$row() {\n    return `$${this._column.letter}$${this.row}`;\n  }\n\n  // =========================================================================\n  // Value stuff\n\n  get type() {\n    return this._value.type;\n  }\n\n  get effectiveType() {\n    return this._value.effectiveType;\n  }\n\n  toCsvString() {\n    return this._value.toCsvString();\n  }\n\n  // =========================================================================\n  // Merge stuff\n\n  addMergeRef() {\n    this._mergeCount++;\n  }\n\n  releaseMergeRef() {\n    this._mergeCount--;\n  }\n\n  get isMerged() {\n    return this._mergeCount > 0 || this.type === Cell.Types.Merge;\n  }\n\n  merge(master, ignoreStyle) {\n    this._value.release();\n    this._value = Value.create(Cell.Types.Merge, this, master);\n    if (!ignoreStyle) {\n      this.style = master.style;\n    }\n  }\n\n  unmerge() {\n    if (this.type === Cell.Types.Merge) {\n      this._value.release();\n      this._value = Value.create(Cell.Types.Null, this);\n      this.style = this._mergeStyle(this._row.style, this._column.style, {});\n    }\n  }\n\n  isMergedTo(master) {\n    if (this._value.type !== Cell.Types.Merge) return false;\n    return this._value.isMergedTo(master);\n  }\n\n  get master() {\n    if (this.type === Cell.Types.Merge) {\n      return this._value.master;\n    }\n    return this; // an unmerged cell is its own master\n  }\n\n  get isHyperlink() {\n    return this._value.type === Cell.Types.Hyperlink;\n  }\n\n  get hyperlink() {\n    return this._value.hyperlink;\n  }\n\n  // return the value\n  get value() {\n    return this._value.value;\n  }\n\n  // set the value - can be number, string or raw\n  set value(v) {\n    // special case - merge cells set their master's value\n    if (this.type === Cell.Types.Merge) {\n      this._value.master.value = v;\n      return;\n    }\n\n    this._value.release();\n\n    // assign value\n    this._value = Value.create(Value.getType(v), this, v);\n  }\n\n  get note() {\n    return this._comment && this._comment.note;\n  }\n\n  set note(note) {\n    this._comment = new Note(note);\n  }\n\n  get text() {\n    return this._value.toString();\n  }\n\n  get html() {\n    return _.escapeHtml(this.text);\n  }\n\n  toString() {\n    return this.text;\n  }\n\n  _upgradeToHyperlink(hyperlink) {\n    // if this cell is a string, turn it into a Hyperlink\n    if (this.type === Cell.Types.String) {\n      this._value = Value.create(Cell.Types.Hyperlink, this, {\n        text: this._value.value,\n        hyperlink,\n      });\n    }\n  }\n\n  // =========================================================================\n  // Formula stuff\n  get formula() {\n    return this._value.formula;\n  }\n\n  get result() {\n    return this._value.result;\n  }\n\n  get formulaType() {\n    return this._value.formulaType;\n  }\n\n  // =========================================================================\n  // Name stuff\n  get fullAddress() {\n    const {worksheet} = this._row;\n    return {\n      sheetName: worksheet.name,\n      address: this.address,\n      row: this.row,\n      col: this.col,\n    };\n  }\n\n  get name() {\n    return this.names[0];\n  }\n\n  set name(value) {\n    this.names = [value];\n  }\n\n  get names() {\n    return this.workbook.definedNames.getNamesEx(this.fullAddress);\n  }\n\n  set names(value) {\n    const {definedNames} = this.workbook;\n    definedNames.removeAllNames(this.fullAddress);\n    value.forEach(name => {\n      definedNames.addEx(this.fullAddress, name);\n    });\n  }\n\n  addName(name) {\n    this.workbook.definedNames.addEx(this.fullAddress, name);\n  }\n\n  removeName(name) {\n    this.workbook.definedNames.removeEx(this.fullAddress, name);\n  }\n\n  removeAllNames() {\n    this.workbook.definedNames.removeAllNames(this.fullAddress);\n  }\n\n  // =========================================================================\n  // Data Validation stuff\n  get _dataValidations() {\n    return this.worksheet.dataValidations;\n  }\n\n  get dataValidation() {\n    return this._dataValidations.find(this.address);\n  }\n\n  set dataValidation(value) {\n    this._dataValidations.add(this.address, value);\n  }\n\n  // =========================================================================\n  // Model stuff\n\n  get model() {\n    const {model} = this._value;\n    model.style = this.style;\n    if (this._comment) {\n      model.comment = this._comment.model;\n    }\n    return model;\n  }\n\n  set model(value) {\n    this._value.release();\n    this._value = Value.create(value.type, this);\n    this._value.model = value;\n\n    if (value.comment) {\n      switch (value.comment.type) {\n        case 'note':\n          this._comment = Note.fromModel(value.comment);\n          break;\n      }\n    }\n\n    if (value.style) {\n      this.style = value.style;\n    } else {\n      this.style = {};\n    }\n  }\n}\nCell.Types = Enums.ValueType;\n\n// =============================================================================\n// Internal Value Types\n\nclass NullValue {\n  constructor(cell) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.Null,\n    };\n  }\n\n  get value() {\n    return null;\n  }\n\n  set value(value) {\n    // nothing to do\n  }\n\n  get type() {\n    return Cell.Types.Null;\n  }\n\n  get effectiveType() {\n    return Cell.Types.Null;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return '';\n  }\n\n  release() {}\n\n  toString() {\n    return '';\n  }\n}\n\nclass NumberValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.Number,\n      value,\n    };\n  }\n\n  get value() {\n    return this.model.value;\n  }\n\n  set value(value) {\n    this.model.value = value;\n  }\n\n  get type() {\n    return Cell.Types.Number;\n  }\n\n  get effectiveType() {\n    return Cell.Types.Number;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return this.model.value.toString();\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.value.toString();\n  }\n}\n\nclass StringValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.String,\n      value,\n    };\n  }\n\n  get value() {\n    return this.model.value;\n  }\n\n  set value(value) {\n    this.model.value = value;\n  }\n\n  get type() {\n    return Cell.Types.String;\n  }\n\n  get effectiveType() {\n    return Cell.Types.String;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return `\"${this.model.value.replace(/\"/g, '\"\"')}\"`;\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.value;\n  }\n}\n\nclass RichTextValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.String,\n      value,\n    };\n  }\n\n  get value() {\n    return this.model.value;\n  }\n\n  set value(value) {\n    this.model.value = value;\n  }\n\n  toString() {\n    return this.model.value.richText.map(t => t.text).join('');\n  }\n\n  get type() {\n    return Cell.Types.RichText;\n  }\n\n  get effectiveType() {\n    return Cell.Types.RichText;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return `\"${this.text.replace(/\"/g, '\"\"')}\"`;\n  }\n\n  release() {}\n}\n\nclass DateValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.Date,\n      value,\n    };\n  }\n\n  get value() {\n    return this.model.value;\n  }\n\n  set value(value) {\n    this.model.value = value;\n  }\n\n  get type() {\n    return Cell.Types.Date;\n  }\n\n  get effectiveType() {\n    return Cell.Types.Date;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return this.model.value.toISOString();\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.value.toString();\n  }\n}\n\nclass HyperlinkValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.Hyperlink,\n      text: value ? value.text : undefined,\n      hyperlink: value ? value.hyperlink : undefined,\n    };\n    if (value && value.tooltip) {\n      this.model.tooltip = value.tooltip;\n    }\n  }\n\n  get value() {\n    const v = {\n      text: this.model.text,\n      hyperlink: this.model.hyperlink,\n    };\n    if (this.model.tooltip) {\n      v.tooltip = this.model.tooltip;\n    }\n    return v;\n  }\n\n  set value(value) {\n    this.model = {\n      text: value.text,\n      hyperlink: value.hyperlink,\n    };\n    if (value.tooltip) {\n      this.model.tooltip = value.tooltip;\n    }\n  }\n\n  get text() {\n    return this.model.text;\n  }\n\n  set text(value) {\n    this.model.text = value;\n  }\n\n  /*\n  get tooltip() {\n    return this.model.tooltip;\n  }\n\n  set tooltip(value) {\n    this.model.tooltip = value;\n  } */\n\n  get hyperlink() {\n    return this.model.hyperlink;\n  }\n\n  set hyperlink(value) {\n    this.model.hyperlink = value;\n  }\n\n  get type() {\n    return Cell.Types.Hyperlink;\n  }\n\n  get effectiveType() {\n    return Cell.Types.Hyperlink;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return this.model.hyperlink;\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.text;\n  }\n}\n\nclass MergeValue {\n  constructor(cell, master) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.Merge,\n      master: master ? master.address : undefined,\n    };\n    this._master = master;\n    if (master) {\n      master.addMergeRef();\n    }\n  }\n\n  get value() {\n    return this._master.value;\n  }\n\n  set value(value) {\n    if (value instanceof Cell) {\n      if (this._master) {\n        this._master.releaseMergeRef();\n      }\n      value.addMergeRef();\n      this._master = value;\n    } else {\n      this._master.value = value;\n    }\n  }\n\n  isMergedTo(master) {\n    return master === this._master;\n  }\n\n  get master() {\n    return this._master;\n  }\n\n  get type() {\n    return Cell.Types.Merge;\n  }\n\n  get effectiveType() {\n    return this._master.effectiveType;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return '';\n  }\n\n  release() {\n    this._master.releaseMergeRef();\n  }\n\n  toString() {\n    return this.value.toString();\n  }\n}\n\nclass FormulaValue {\n  constructor(cell, value) {\n    this.cell = cell;\n\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.Formula,\n      shareType: value ? value.shareType : undefined,\n      ref: value ? value.ref : undefined,\n      formula: value ? value.formula : undefined,\n      sharedFormula: value ? value.sharedFormula : undefined,\n      result: value ? value.result : undefined,\n    };\n  }\n\n  _copyModel(model) {\n    const copy = {};\n    const cp = name => {\n      const value = model[name];\n      if (value) {\n        copy[name] = value;\n      }\n    };\n    cp('formula');\n    cp('result');\n    cp('ref');\n    cp('shareType');\n    cp('sharedFormula');\n    return copy;\n  }\n\n  get value() {\n    return this._copyModel(this.model);\n  }\n\n  set value(value) {\n    this.model = this._copyModel(value);\n  }\n\n  validate(value) {\n    switch (Value.getType(value)) {\n      case Cell.Types.Null:\n      case Cell.Types.String:\n      case Cell.Types.Number:\n      case Cell.Types.Date:\n        break;\n      case Cell.Types.Hyperlink:\n      case Cell.Types.Formula:\n      default:\n        throw new Error('Cannot process that type of result value');\n    }\n  }\n\n  get dependencies() {\n    // find all the ranges and cells mentioned in the formula\n    const ranges = this.formula.match(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}:[A-Z]{1,3}\\d{1,4}/g);\n    const cells = this.formula\n      .replace(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}:[A-Z]{1,3}\\d{1,4}/g, '')\n      .match(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}/g);\n    return {\n      ranges,\n      cells,\n    };\n  }\n\n  get formula() {\n    return this.model.formula || this._getTranslatedFormula();\n  }\n\n  set formula(value) {\n    this.model.formula = value;\n  }\n\n  get formulaType() {\n    if (this.model.formula) {\n      return Enums.FormulaType.Master;\n    }\n    if (this.model.sharedFormula) {\n      return Enums.FormulaType.Shared;\n    }\n    return Enums.FormulaType.None;\n  }\n\n  get result() {\n    return this.model.result;\n  }\n\n  set result(value) {\n    this.model.result = value;\n  }\n\n  get type() {\n    return Cell.Types.Formula;\n  }\n\n  get effectiveType() {\n    const v = this.model.result;\n    if (v === null || v === undefined) {\n      return Enums.ValueType.Null;\n    }\n    if (v instanceof String || typeof v === 'string') {\n      return Enums.ValueType.String;\n    }\n    if (typeof v === 'number') {\n      return Enums.ValueType.Number;\n    }\n    if (v instanceof Date) {\n      return Enums.ValueType.Date;\n    }\n    if (v.text && v.hyperlink) {\n      return Enums.ValueType.Hyperlink;\n    }\n    if (v.formula) {\n      return Enums.ValueType.Formula;\n    }\n\n    return Enums.ValueType.Null;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  _getTranslatedFormula() {\n    if (!this._translatedFormula && this.model.sharedFormula) {\n      const {worksheet} = this.cell;\n      const master = worksheet.findCell(this.model.sharedFormula);\n      this._translatedFormula =\n        master && slideFormula(master.formula, master.address, this.model.address);\n    }\n    return this._translatedFormula;\n  }\n\n  toCsvString() {\n    return `${this.model.result || ''}`;\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.result ? this.model.result.toString() : '';\n  }\n}\n\nclass SharedStringValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.SharedString,\n      value,\n    };\n  }\n\n  get value() {\n    return this.model.value;\n  }\n\n  set value(value) {\n    this.model.value = value;\n  }\n\n  get type() {\n    return Cell.Types.SharedString;\n  }\n\n  get effectiveType() {\n    return Cell.Types.SharedString;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return this.model.value.toString();\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.value.toString();\n  }\n}\n\nclass BooleanValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.Boolean,\n      value,\n    };\n  }\n\n  get value() {\n    return this.model.value;\n  }\n\n  set value(value) {\n    this.model.value = value;\n  }\n\n  get type() {\n    return Cell.Types.Boolean;\n  }\n\n  get effectiveType() {\n    return Cell.Types.Boolean;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return this.model.value ? 1 : 0;\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.value.toString();\n  }\n}\n\nclass ErrorValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.Error,\n      value,\n    };\n  }\n\n  get value() {\n    return this.model.value;\n  }\n\n  set value(value) {\n    this.model.value = value;\n  }\n\n  get type() {\n    return Cell.Types.Error;\n  }\n\n  get effectiveType() {\n    return Cell.Types.Error;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return this.toString();\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.value.error.toString();\n  }\n}\n\nclass JSONValue {\n  constructor(cell, value) {\n    this.model = {\n      address: cell.address,\n      type: Cell.Types.String,\n      value: JSON.stringify(value),\n      rawValue: value,\n    };\n  }\n\n  get value() {\n    return this.model.rawValue;\n  }\n\n  set value(value) {\n    this.model.rawValue = value;\n    this.model.value = JSON.stringify(value);\n  }\n\n  get type() {\n    return Cell.Types.String;\n  }\n\n  get effectiveType() {\n    return Cell.Types.String;\n  }\n\n  get address() {\n    return this.model.address;\n  }\n\n  set address(value) {\n    this.model.address = value;\n  }\n\n  toCsvString() {\n    return this.model.value;\n  }\n\n  release() {}\n\n  toString() {\n    return this.model.value;\n  }\n}\n\n// Value is a place to hold common static Value type functions\nconst Value = {\n  getType(value) {\n    if (value === null || value === undefined) {\n      return Cell.Types.Null;\n    }\n    if (value instanceof String || typeof value === 'string') {\n      return Cell.Types.String;\n    }\n    if (typeof value === 'number') {\n      return Cell.Types.Number;\n    }\n    if (typeof value === 'boolean') {\n      return Cell.Types.Boolean;\n    }\n    if (value instanceof Date) {\n      return Cell.Types.Date;\n    }\n    if (value.text && value.hyperlink) {\n      return Cell.Types.Hyperlink;\n    }\n    if (value.formula || value.sharedFormula) {\n      return Cell.Types.Formula;\n    }\n    if (value.richText) {\n      return Cell.Types.RichText;\n    }\n    if (value.sharedString) {\n      return Cell.Types.SharedString;\n    }\n    if (value.error) {\n      return Cell.Types.Error;\n    }\n    return Cell.Types.JSON;\n  },\n\n  // map valueType to constructor\n  types: [\n    {t: Cell.Types.Null, f: NullValue},\n    {t: Cell.Types.Number, f: NumberValue},\n    {t: Cell.Types.String, f: StringValue},\n    {t: Cell.Types.Date, f: DateValue},\n    {t: Cell.Types.Hyperlink, f: HyperlinkValue},\n    {t: Cell.Types.Formula, f: FormulaValue},\n    {t: Cell.Types.Merge, f: MergeValue},\n    {t: Cell.Types.JSON, f: JSONValue},\n    {t: Cell.Types.SharedString, f: SharedStringValue},\n    {t: Cell.Types.RichText, f: RichTextValue},\n    {t: Cell.Types.Boolean, f: BooleanValue},\n    {t: Cell.Types.Error, f: ErrorValue},\n  ].reduce((p, t) => {\n    p[t.t] = t.f;\n    return p;\n  }, []),\n\n  create(type, cell, value) {\n    const T = this.types[type];\n    if (!T) {\n      throw new Error(`Could not create Value of type ${type}`);\n    }\n    return new T(cell, value);\n  },\n};\n\nmodule.exports = Cell;\n"],"file":"cell.js"}