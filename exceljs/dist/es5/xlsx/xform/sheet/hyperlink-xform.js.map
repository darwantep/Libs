{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/hyperlink-xform.js"],"names":["BaseXform","require","HyperlinkXform","xmlStream","model","isInternalLink","leafNode","ref","address","rId","tooltip","location","target","node","name","attributes","test","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;IAEMC,c;;;;;;;;;;;;;SACJ,eAAU;AACR,aAAO,WAAP;AACD;;;WAED,gBAAOC,SAAP,EAAkBC,KAAlB,EAAyB;AACvB,UAAI,KAAKC,cAAL,CAAoBD,KAApB,CAAJ,EAAgC;AAC9BD,QAAAA,SAAS,CAACG,QAAV,CAAmB,WAAnB,EAAgC;AAC9BC,UAAAA,GAAG,EAAEH,KAAK,CAACI,OADmB;AAE9B,kBAAQJ,KAAK,CAACK,GAFgB;AAG9BC,UAAAA,OAAO,EAAEN,KAAK,CAACM,OAHe;AAI9BC,UAAAA,QAAQ,EAAEP,KAAK,CAACQ;AAJc,SAAhC;AAMD,OAPD,MAOO;AACLT,QAAAA,SAAS,CAACG,QAAV,CAAmB,WAAnB,EAAgC;AAC9BC,UAAAA,GAAG,EAAEH,KAAK,CAACI,OADmB;AAE9B,kBAAQJ,KAAK,CAACK,GAFgB;AAG9BC,UAAAA,OAAO,EAAEN,KAAK,CAACM;AAHe,SAAhC;AAKD;AACF;;;WAED,mBAAUG,IAAV,EAAgB;AACd,UAAIA,IAAI,CAACC,IAAL,KAAc,WAAlB,EAA+B;AAC7B,aAAKV,KAAL,GAAa;AACXI,UAAAA,OAAO,EAAEK,IAAI,CAACE,UAAL,CAAgBR,GADd;AAEXE,UAAAA,GAAG,EAAEI,IAAI,CAACE,UAAL,CAAgB,MAAhB,CAFM;AAGXL,UAAAA,OAAO,EAAEG,IAAI,CAACE,UAAL,CAAgBL;AAHd,SAAb,CAD6B,CAO7B;;AACA,YAAIG,IAAI,CAACE,UAAL,CAAgBJ,QAApB,EAA8B;AAC5B,eAAKP,KAAL,CAAWQ,MAAX,GAAoBC,IAAI,CAACE,UAAL,CAAgBJ,QAApC;AACD;;AACD,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;;WAED,qBAAY,CAAE;;;WAEd,sBAAa;AACX,aAAO,KAAP;AACD;;;WAED,wBAAeP,KAAf,EAAsB;AACpB;AACA,aAAOA,KAAK,CAACQ,MAAN,IAAgB,yBAAyBI,IAAzB,CAA8BZ,KAAK,CAACQ,MAApC,CAAvB;AACD;;;;EAhD0BZ,S;;AAmD7BiB,MAAM,CAACC,OAAP,GAAiBhB,cAAjB","sourcesContent":["const BaseXform = require('../base-xform');\n\nclass HyperlinkXform extends BaseXform {\n  get tag() {\n    return 'hyperlink';\n  }\n\n  render(xmlStream, model) {\n    if (this.isInternalLink(model)) {\n      xmlStream.leafNode('hyperlink', {\n        ref: model.address,\n        'r:id': model.rId,\n        tooltip: model.tooltip,\n        location: model.target,\n      });\n    } else {\n      xmlStream.leafNode('hyperlink', {\n        ref: model.address,\n        'r:id': model.rId,\n        tooltip: model.tooltip,\n      });\n    }\n  }\n\n  parseOpen(node) {\n    if (node.name === 'hyperlink') {\n      this.model = {\n        address: node.attributes.ref,\n        rId: node.attributes['r:id'],\n        tooltip: node.attributes.tooltip,\n      };\n\n      // This is an internal link\n      if (node.attributes.location) {\n        this.model.target = node.attributes.location;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n\n  isInternalLink(model) {\n    // @example: Sheet2!D3, return true\n    return model.target && /^[^!]+![a-zA-Z]+[\\d]+$/.test(model.target);\n  }\n}\n\nmodule.exports = HyperlinkXform;\n"],"file":"hyperlink-xform.js"}