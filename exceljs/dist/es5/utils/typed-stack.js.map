{"version":3,"sources":["../../../lib/utils/typed-stack.js"],"names":["TypedStack","type","_type","_stack","length","tos","pop","instance","Error","push","module","exports"],"mappings":";;;;;;;;IAAMA,U;AACJ,sBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,MAAL,GAAc,EAAd;AACD;;;;SAED,eAAW;AACT,aAAO,KAAKA,MAAL,CAAYC,MAAnB;AACD;;;WAED,eAAM;AACJ,UAAMC,GAAG,GAAG,KAAKF,MAAL,CAAYG,GAAZ,EAAZ;;AACA,aAAOD,GAAG,IAAI,IAAI,KAAKH,KAAT,EAAd;AACD;;;WAED,cAAKK,QAAL,EAAe;AACb,UAAI,EAAEA,QAAQ,YAAY,KAAKL,KAA3B,CAAJ,EAAuC;AACrC,cAAM,IAAIM,KAAJ,CAAU,mCAAV,CAAN;AACD;;AACD,WAAKL,MAAL,CAAYM,IAAZ,CAAiBF,QAAjB;AACD;;;;;;AAGHG,MAAM,CAACC,OAAP,GAAiBX,UAAjB","sourcesContent":["class TypedStack {\n  constructor(type) {\n    this._type = type;\n    this._stack = [];\n  }\n\n  get size() {\n    return this._stack.length;\n  }\n\n  pop() {\n    const tos = this._stack.pop();\n    return tos || new this._type();\n  }\n\n  push(instance) {\n    if (!(instance instanceof this._type)) {\n      throw new Error('Invalid type pushed to TypedStack');\n    }\n    this._stack.push(instance);\n  }\n}\n\nmodule.exports = TypedStack;\n"],"file":"typed-stack.js"}